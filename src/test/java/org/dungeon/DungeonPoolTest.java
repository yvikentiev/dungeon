package org.dungeon;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.List;

public class DungeonPoolTest {
    @Test
    public void testCreateXSequence() {
        System.out.println("–°–æ–∑–¥–∞—Ç—å –ø—É–ª –∏–∑ 10 –ø–æ–¥–∑–µ–º–µ–ª–∏–π —Ä–∞–∑–º–µ—Ä–æ–º 7 –Ω–∞ 4");
        DungeonPool dungeonPool = new DungeonPool(DungeonGenerator
                .generateDungeons(14,7,100));

        System.out.println("–í—ã–≤–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–∑–µ–º–µ–ª—å—è –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç—ã –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–∏–º—ã");
        List<Dungeon> sequence = dungeonPool.createXSequence(3);

        Assertions.assertEquals(3, sequence.size());

        System.out.println("üëæüëæüëæ–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –ø–æ–¥–∑–µ–º–µ–ª—å—è –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –æ—Ç–∫—Ä—ã—Ç—ã –∏ —Å–æ–ø–æ—Å—Ç–∞–≤–∏–º—ã");
        for (int i = 0; i < sequence.size() - 1; i++) {
            Dungeon currentDungeon = sequence.get(i);
            Dungeon nextDungeon = sequence.get(i + 1);

            Assertions.assertTrue(currentDungeon.isOpen());
            Assertions.assertTrue(nextDungeon.isOpen());
            Assertions.assertTrue(currentDungeon.isConnectable(nextDungeon));
        }

        System.out.println("–ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–¥–∑–µ–º–µ–ª—å—è –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è");
        for (int i = 0; i < sequence.size() - 1; i++) {
            Dungeon currentDungeon = sequence.get(i);
            Dungeon nextDungeon = sequence.get(i + 1);

            Assertions.assertNotEquals(currentDungeon, nextDungeon);
        }
    }
}